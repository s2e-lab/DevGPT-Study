name: Lint and Format Checks

on:
  pull_request:
    branches:
      - main

jobs:
  lint-format-frontend:
    name: Lint and Format Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: frontend/package*.json

      - name: Install dependencies
        run: npm install

      - name: Lint with ESLint
        run: npm run lint

      - name: Format with Prettier
        run: npm run format:check
        continue-on-error: true

  lint-format-backend:
    name: Lint and Format Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: backend/*requirements.txt

      - name: Install dependencies
        run: pip install -r dev-requirements.txt

      - name: Lint with Flake8
        run: |
          find . -name "*.py" -print0 | xargs -0 flake8 --max-line-length=120 --ignore=E402,F841,F401,E302,E305,E266,E203,W503

      - name: Format with Black
        run: |
          find . -name "*.py" -print0 | xargs -0 black --check --experimental-string-processing --line-length=120
        continue-on-error: true
